@layout.main()
  <section class="flex flex-col mt-10 gap-28">
    <div class="flex max-w-2xl self-center bg-slate-900">
      @carousel({
      left_button_class: 'z-30 h-fit flex rounded-full items-center justify-center bg-white/40 p-2 text-neutral-600 transition hover:bg-white/60 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-black active:outline-offset-0 dark:bg-neutral-950/40 dark:text-neutral-300 dark:hover:bg-neutral-950/60 dark:focus-visible:outline-white',
      right_button_class: 'z-30 h-fit flex rounded-full items-center justify-center bg-white/40 p-2 text-neutral-600 transition hover:bg-white/60 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-black active:outline-offset-0 dark:bg-neutral-950/40 dark:text-neutral-300 dark:hover:bg-neutral-950/60 dark:focus-visible:outline-white',
      })
        @slot('slides')
          @each(app in apps)
            {
              full: '{{ app.headerImage }}',
              type: 0,
            },
          @end
        @end

        @slot('indicators')
          <div
            class="rounded-md bottom-3 md:bottom-5 self-center z-20 flex gap-4 md:gap-3 px-1.5 py-1 md:px-2"
            role="group"
            aria-label="slides"
          >
            <template x-for="(slide, index) in slides">
              <button
                class="size-2 cursor-pointer rounded-full transition"
                x-on:click="(currentSlideIndex = index + 1), setAutoplayInterval(autoplayIntervalTime)"
                x-bind:class="[currentSlideIndex === index + 1 ? 'bg-neutral-300' : 'bg-neutral-300/50']"
                x-bind:aria-label="'slide ' + (index + 1)"
              ></button>
            </template>
          </div>
        @end
      @end
    </div>

    {{-- <div
      x-data
      x-init="
                $nextTick(() => {
                    const items = $refs.item;
                    const content = Array.from(items.children)
                    content.forEach((item) => {
                      const clone = item.cloneNode(true);
                      items.appendChild(clone);
                    });
                });
              "
      class="relative w-full bg-gray-900 container-block"
    >
      <div
        class="relative w-full py-3 mx-auto overflow-hidden text-lg italic tracking-wide text-white uppercase bg-gray-900 max-w-max sm:text-xs md:text-sm lg:text-base xl:text-xl 2xl:text-2xl"
      >
        <div class="absolute left-0 z-20 w-40 h-full bg-gradient-to-r from-gray-900 to-transparent">
        </div>
        <div class="absolute right-0 z-20 w-40 h-full bg-gradient-to-l from-gray-900 to-transparent">
        </div>
        <div x-ref="content" class="max-w-7xl overflow-hidden mx-auto">
          <div x-ref="item" class="gap-4 flex flex-nowrap w-max animate-marquee">
            @each(app in apps)
              <img class="h-28" src="{{ app.headerImage }}" />
            @end
          </div>
        </div>
      </div>
    </div> --}}

    <div class="flex flex-col flex-nowrap space-y-2 px-40">
      @each(app in apps)
        <a href="{{ route('apps.show', app) }}" class="flex flex-row h-20 bg-slate-950 hover:bg-black">
          <img class="h-full" src="{{ app.headerImage }}" />
          <p class="text-white pl-4">
            {{ app.name }}
          </p>
        </a>
      @end
    </div>
  </section>
@end
